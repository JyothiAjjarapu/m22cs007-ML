# -*- coding: utf-8 -*-
"""M22CS007_task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_nRfegNFZLR-H6Nda6r295YUA7Zi3SuT
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from google.colab import files
uploaded = files.upload()

import io
df2 = pd.read_csv(io.BytesIO(uploaded['Rainfall_dataset.csv']))
df2

df2.head()

df2.tail()

df2.shape

df2.corr()

df2.cov()

df2.rename(columns={'Rainfall (mm)':'Rainfall', 'Yield (hg/ha)': 'Yield'}, inplace=True)
x=df2.Rainfall
y=df2.Yield

plt.xlabel('RainFall', fontsize=20)
plt.ylabel('Yeild', fontsize=20)
plt.scatter(x,y)

xmean=x.mean()
xmean

df2['diff']=xmean - x

df2

df2['sqofdif']=df2['diff']**2
df2

Squaredsumx=df2.sqofdif.sum()

ymean=y.mean()
ymean

df2['diffy']=ymean-y
df2

df2['sqofdiffy']=df2['diffy']**2
df2

numerator=0
denominator=0
for i in range(len(x)):
  numerator=numerator+(x[i]-xmean)*(y[i]-ymean)
  denominator=denominator+(x[i]-xmean)**2
m=numerator/denominator
m



b=ymean-m*xmean
b

def prediction(t):
  prediction=m*t+b;
  return prediction

prediction(560)

plt.xlabel('RainFall', fontsize=20)
plt.ylabel('Yeild', fontsize=20)
plt.scatter(x,y)

plt.xlabel('RainFall', fontsize=20)
plt.ylabel('Yeild', fontsize=20)
plt.scatter(x,m*x+b)

plt.xlabel('RainFall', fontsize=20)
plt.ylabel('Yeild', fontsize=20)
plt.plot(x,m*x+b)

plt.xlabel('RainFall', fontsize=20)
plt.ylabel('Yeild', fontsize=20)
plt.scatter(x,y)
plt.plot(x,m*x+b,'r')



##MAE and MSE

import math
sum=0
prediction=m*x+b
for i in range(len(y)): 
  sum+=abs(y[i]-prediction[i])

mae=sum/len(y)

print("Mean Absolute error is "+str(mae))

othersum=0
prediction1=m*x+b
for i in range(len(y)):
  
  othersum+=abs(y[i]-prediction1[i])**2

mse=othersum/len(y)

print("Mean square error is "+str(mse))

